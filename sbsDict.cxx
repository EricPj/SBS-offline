//
// File generated by /opt/root_v5.34.36/bin/rootcint at Tue May 30 16:32:26 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME sbsDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "sbsDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace Decoder {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void Decoder_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("Decoder", 0 /*version*/, "./MPDModule.h", 31,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &Decoder_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void Decoder_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void DecodercLcLMPDModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DecodercLcLMPDModule(void *p = 0);
   static void *newArray_DecodercLcLMPDModule(Long_t size, void *p);
   static void delete_DecodercLcLMPDModule(void *p);
   static void deleteArray_DecodercLcLMPDModule(void *p);
   static void destruct_DecodercLcLMPDModule(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Decoder::MPDModule*)
   {
      ::Decoder::MPDModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Decoder::MPDModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Decoder::MPDModule", ::Decoder::MPDModule::Class_Version(), "./MPDModule.h", 33,
                  typeid(::Decoder::MPDModule), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Decoder::MPDModule::Dictionary, isa_proxy, 4,
                  sizeof(::Decoder::MPDModule) );
      instance.SetNew(&new_DecodercLcLMPDModule);
      instance.SetNewArray(&newArray_DecodercLcLMPDModule);
      instance.SetDelete(&delete_DecodercLcLMPDModule);
      instance.SetDeleteArray(&deleteArray_DecodercLcLMPDModule);
      instance.SetDestructor(&destruct_DecodercLcLMPDModule);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Decoder::MPDModule*)
   {
      return GenerateInitInstanceLocal((::Decoder::MPDModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Decoder::MPDModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SBSBigBite_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_SBSBigBite(void *p);
   static void deleteArray_SBSBigBite(void *p);
   static void destruct_SBSBigBite(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SBSBigBite*)
   {
      ::SBSBigBite *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SBSBigBite >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SBSBigBite", ::SBSBigBite::Class_Version(), "./SBSBigBite.h", 6,
                  typeid(::SBSBigBite), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SBSBigBite::Dictionary, isa_proxy, 4,
                  sizeof(::SBSBigBite) );
      instance.SetDelete(&delete_SBSBigBite);
      instance.SetDeleteArray(&deleteArray_SBSBigBite);
      instance.SetDestructor(&destruct_SBSBigBite);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SBSBigBite*)
   {
      return GenerateInitInstanceLocal((::SBSBigBite*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SBSBigBite*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SBSGEMPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_SBSGEMPlane(void *p);
   static void deleteArray_SBSGEMPlane(void *p);
   static void destruct_SBSGEMPlane(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SBSGEMPlane*)
   {
      ::SBSGEMPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SBSGEMPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SBSGEMPlane", ::SBSGEMPlane::Class_Version(), "./SBSGEMPlane.h", 23,
                  typeid(::SBSGEMPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SBSGEMPlane::Dictionary, isa_proxy, 4,
                  sizeof(::SBSGEMPlane) );
      instance.SetDelete(&delete_SBSGEMPlane);
      instance.SetDeleteArray(&deleteArray_SBSGEMPlane);
      instance.SetDestructor(&destruct_SBSGEMPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SBSGEMPlane*)
   {
      return GenerateInitInstanceLocal((::SBSGEMPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SBSGEMPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SBSGEMStand_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_SBSGEMStand(void *p);
   static void deleteArray_SBSGEMStand(void *p);
   static void destruct_SBSGEMStand(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SBSGEMStand*)
   {
      ::SBSGEMStand *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SBSGEMStand >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SBSGEMStand", ::SBSGEMStand::Class_Version(), "./SBSGEMStand.h", 10,
                  typeid(::SBSGEMStand), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SBSGEMStand::Dictionary, isa_proxy, 4,
                  sizeof(::SBSGEMStand) );
      instance.SetDelete(&delete_SBSGEMStand);
      instance.SetDeleteArray(&deleteArray_SBSGEMStand);
      instance.SetDestructor(&destruct_SBSGEMStand);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SBSGEMStand*)
   {
      return GenerateInitInstanceLocal((::SBSGEMStand*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SBSGEMStand*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

      namespace Decoder {
//______________________________________________________________________________
atomic_TClass_ptr MPDModule::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPDModule::Class_Name()
{
   return "Decoder::MPDModule";
}

//______________________________________________________________________________
const char *MPDModule::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Decoder::MPDModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPDModule::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Decoder::MPDModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPDModule::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Decoder::MPDModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPDModule::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Decoder::MPDModule*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace Decoder
//______________________________________________________________________________
atomic_TClass_ptr SBSBigBite::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SBSBigBite::Class_Name()
{
   return "SBSBigBite";
}

//______________________________________________________________________________
const char *SBSBigBite::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SBSBigBite*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SBSBigBite::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SBSBigBite*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SBSBigBite::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SBSBigBite*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SBSBigBite::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SBSBigBite*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SBSGEMPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SBSGEMPlane::Class_Name()
{
   return "SBSGEMPlane";
}

//______________________________________________________________________________
const char *SBSGEMPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SBSGEMPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SBSGEMPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SBSGEMPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SBSGEMPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SBSGEMPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SBSGEMPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SBSGEMPlane*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SBSGEMStand::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SBSGEMStand::Class_Name()
{
   return "SBSGEMStand";
}

//______________________________________________________________________________
const char *SBSGEMStand::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SBSGEMStand*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SBSGEMStand::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SBSGEMStand*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SBSGEMStand::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SBSGEMStand*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SBSGEMStand::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SBSGEMStand*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace Decoder {
//______________________________________________________________________________
void MPDModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class Decoder::MPDModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Decoder::MPDModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(Decoder::MPDModule::Class(),this);
   }
}

} // namespace Decoder
//______________________________________________________________________________
      namespace Decoder {
void MPDModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Decoder::MPDModule.
      TClass *R__cl = ::Decoder::MPDModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAcqMode", &fAcqMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSamplePeriod", &fSamplePeriod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumSample", &fNumSample);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumADC", &fNumADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIdxA", &fIdxA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIdxS", &fIdxS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIdxC", &fIdxC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIdxMPD", &fIdxMPD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCountS", &fCountS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCountW", &fCountW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumHits", &fNumHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrameHeader", (void*)&fFrameHeader);
      R__insp.InspectMember("vector<Int_t>", (void*)&fFrameHeader, "fFrameHeader.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrameTrailer", (void*)&fFrameTrailer);
      R__insp.InspectMember("vector<Int_t>", (void*)&fFrameTrailer, "fFrameTrailer.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef Decoder::VmeModule baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace Decoder
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DecodercLcLMPDModule(void *p) {
      return  p ? new(p) ::Decoder::MPDModule : new ::Decoder::MPDModule;
   }
   static void *newArray_DecodercLcLMPDModule(Long_t nElements, void *p) {
      return p ? new(p) ::Decoder::MPDModule[nElements] : new ::Decoder::MPDModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_DecodercLcLMPDModule(void *p) {
      delete ((::Decoder::MPDModule*)p);
   }
   static void deleteArray_DecodercLcLMPDModule(void *p) {
      delete [] ((::Decoder::MPDModule*)p);
   }
   static void destruct_DecodercLcLMPDModule(void *p) {
      typedef ::Decoder::MPDModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Decoder::MPDModule

//______________________________________________________________________________
void SBSBigBite::Streamer(TBuffer &R__b)
{
   // Stream an object of class SBSBigBite.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SBSBigBite::Class(),this);
   } else {
      R__b.WriteClassBuffer(SBSBigBite::Class(),this);
   }
}

//______________________________________________________________________________
void SBSBigBite::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SBSBigBite.
      TClass *R__cl = ::SBSBigBite::IsA();
      if (R__cl || R__insp.IsA()) { }
      THaSpectrometer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SBSBigBite(void *p) {
      delete ((::SBSBigBite*)p);
   }
   static void deleteArray_SBSBigBite(void *p) {
      delete [] ((::SBSBigBite*)p);
   }
   static void destruct_SBSBigBite(void *p) {
      typedef ::SBSBigBite current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SBSBigBite

//______________________________________________________________________________
void SBSGEMStand::Streamer(TBuffer &R__b)
{
   // Stream an object of class SBSGEMStand.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SBSGEMStand::Class(),this);
   } else {
      R__b.WriteClassBuffer(SBSGEMStand::Class(),this);
   }
}

//______________________________________________________________________________
void SBSGEMStand::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SBSGEMStand.
      TClass *R__cl = ::SBSGEMStand::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlanes", (void*)&fPlanes);
      R__insp.InspectMember("vector<SBSGEMPlane*>", (void*)&fPlanes, "fPlanes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCrateMap", &fCrateMap);
      THaTrackingDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SBSGEMStand(void *p) {
      delete ((::SBSGEMStand*)p);
   }
   static void deleteArray_SBSGEMStand(void *p) {
      delete [] ((::SBSGEMStand*)p);
   }
   static void destruct_SBSGEMStand(void *p) {
      typedef ::SBSGEMStand current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SBSGEMStand

//______________________________________________________________________________
void SBSGEMPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class SBSGEMPlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SBSGEMPlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(SBSGEMPlane::Class(),this);
   }
}

//______________________________________________________________________________
void SBSGEMPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SBSGEMPlane.
      TClass *R__cl = ::SBSGEMPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMPDmap", (void*)&fMPDmap);
      R__insp.InspectMember("vector<mpdmap_t>", (void*)&fMPDmap, "fMPDmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChanMapData", (void*)&fChanMapData);
      R__insp.InspectMember("vector<Int_t>", (void*)&fChanMapData, "fChanMapData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZeroSuppressRMS", &fZeroSuppressRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZeroSuppress", &fZeroSuppress);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNch", &fNch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStrip", &fStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fadc[6]", &fadc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fadc0", &fadc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fadc1", &fadc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fadc2", &fadc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fadc3", &fadc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fadc4", &fadc4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fadc5", &fadc5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPedestal", &fPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRMS", &fRMS);
      THaSubDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SBSGEMPlane(void *p) {
      delete ((::SBSGEMPlane*)p);
   }
   static void deleteArray_SBSGEMPlane(void *p) {
      delete [] ((::SBSGEMPlane*)p);
   }
   static void destruct_SBSGEMPlane(void *p) {
      typedef ::SBSGEMPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SBSGEMPlane

/********************************************************
* sbsDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablesbsDict();

extern "C" void G__set_cpp_environmentsbsDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MPDModule.h");
  G__add_compiledheader("SBSBigBite.h");
  G__add_compiledheader("SBSGEMStand.h");
  G__add_compiledheader("SBSGEMPlane.h");
  G__cpp_reset_tagtablesbsDict();
}
#include <new>
extern "C" int G__cpp_dllrevsbsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Decoder */

/* Decoder::MPDModule */
static int G__sbsDict_290_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Decoder::MPDModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Decoder::MPDModule[n];
     } else {
       p = new((void*) gvp) Decoder::MPDModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Decoder::MPDModule;
     } else {
       p = new((void*) gvp) Decoder::MPDModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLMPDModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_290_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Decoder::MPDModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Decoder::MPDModule((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Decoder::MPDModule((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLMPDModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_290_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Decoder::MPDModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_290_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Decoder::MPDModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_290_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Decoder::MPDModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_290_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Decoder::MPDModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_290_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Decoder::MPDModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_290_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Decoder::MPDModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_290_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Decoder::MPDModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_290_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Decoder::MPDModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_290_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Decoder::MPDModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Decoder::MPDModule G__TDecodercLcLMPDModule;
static int G__sbsDict_290_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Decoder::MPDModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Decoder::MPDModule*) (soff+(sizeof(Decoder::MPDModule)*i)))->~G__TDecodercLcLMPDModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Decoder::MPDModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Decoder::MPDModule*) (soff))->~G__TDecodercLcLMPDModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SBSBigBite */
static int G__sbsDict_377_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SBSBigBite* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SBSBigBite((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) SBSBigBite((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_377_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SBSBigBite::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_377_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SBSBigBite::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_377_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SBSBigBite::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_377_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SBSBigBite::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_377_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SBSBigBite*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_377_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SBSBigBite::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_377_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SBSBigBite::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_377_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SBSBigBite::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_377_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SBSBigBite::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SBSBigBite G__TSBSBigBite;
static int G__sbsDict_377_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SBSBigBite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SBSBigBite*) (soff+(sizeof(SBSBigBite)*i)))->~G__TSBSBigBite();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SBSBigBite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SBSBigBite*) (soff))->~G__TSBSBigBite();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SBSGEMPlane */
static int G__sbsDict_380_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SBSGEMPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SBSGEMPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaDetectorBase*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) SBSGEMPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaDetectorBase*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SBSGEMPlane((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) SBSGEMPlane((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SBSGEMPlane((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) SBSGEMPlane((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__sbsDictLN_SBSGEMPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_380_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SBSGEMPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_380_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SBSGEMPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_380_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SBSGEMPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_380_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SBSGEMPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_380_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SBSGEMPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_380_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SBSGEMPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_380_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SBSGEMPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_380_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SBSGEMPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_380_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SBSGEMPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SBSGEMPlane G__TSBSGEMPlane;
static int G__sbsDict_380_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SBSGEMPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SBSGEMPlane*) (soff+(sizeof(SBSGEMPlane)*i)))->~G__TSBSGEMPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SBSGEMPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SBSGEMPlane*) (soff))->~G__TSBSGEMPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SBSGEMStand */
static int G__sbsDict_382_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SBSGEMStand* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SBSGEMStand(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) SBSGEMStand(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SBSGEMStand((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) SBSGEMStand((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SBSGEMStand((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) SBSGEMStand((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_382_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SBSGEMStand::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_382_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SBSGEMStand::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_382_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SBSGEMStand::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_382_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SBSGEMStand::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_382_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SBSGEMStand*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_382_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SBSGEMStand::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_382_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SBSGEMStand::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_382_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SBSGEMStand::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__sbsDict_382_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SBSGEMStand::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SBSGEMStand G__TSBSGEMStand;
static int G__sbsDict_382_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SBSGEMStand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SBSGEMStand*) (soff+(sizeof(SBSGEMStand)*i)))->~G__TSBSGEMStand();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SBSGEMStand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SBSGEMStand*) (soff))->~G__TSBSGEMStand();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Decoder */

/* Decoder::MPDModule */

/* SBSBigBite */

/* SBSGEMPlane */

/* SBSGEMStand */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncsbsDict {
 public:
  G__Sizep2memfuncsbsDict(): p(&G__Sizep2memfuncsbsDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncsbsDict::*p)();
};

size_t G__get_sizep2memfuncsbsDict()
{
  G__Sizep2memfuncsbsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancesbsDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLMPDModule))) {
     Decoder::MPDModule *G__Lderived;
     G__Lderived=(Decoder::MPDModule*)0x1000;
     {
       Decoder::VmeModule *G__Lpbase=(Decoder::VmeModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLMPDModule),G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLVmeModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Decoder::Module *G__Lpbase=(Decoder::Module*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLMPDModule),G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLMPDModule),G__get_linked_tagnum(&G__sbsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLMPDModule),G__get_linked_tagnum(&G__sbsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite))) {
     SBSBigBite *G__Lderived;
     G__Lderived=(SBSBigBite*)0x1000;
     {
       THaSpectrometer *G__Lpbase=(THaSpectrometer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite),G__get_linked_tagnum(&G__sbsDictLN_THaSpectrometer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite),G__get_linked_tagnum(&G__sbsDictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite),G__get_linked_tagnum(&G__sbsDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite),G__get_linked_tagnum(&G__sbsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite),G__get_linked_tagnum(&G__sbsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaTrackingModule *G__Lpbase=(THaTrackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite),G__get_linked_tagnum(&G__sbsDictLN_THaTrackingModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaVertexModule *G__Lpbase=(THaVertexModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite),G__get_linked_tagnum(&G__sbsDictLN_THaVertexModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMPlane))) {
     SBSGEMPlane *G__Lderived;
     G__Lderived=(SBSGEMPlane*)0x1000;
     {
       THaSubDetector *G__Lpbase=(THaSubDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMPlane),G__get_linked_tagnum(&G__sbsDictLN_THaSubDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMPlane),G__get_linked_tagnum(&G__sbsDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMPlane),G__get_linked_tagnum(&G__sbsDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMPlane),G__get_linked_tagnum(&G__sbsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMPlane),G__get_linked_tagnum(&G__sbsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand))) {
     SBSGEMStand *G__Lderived;
     G__Lderived=(SBSGEMStand*)0x1000;
     {
       THaTrackingDetector *G__Lpbase=(THaTrackingDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand),G__get_linked_tagnum(&G__sbsDictLN_THaTrackingDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand),G__get_linked_tagnum(&G__sbsDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand),G__get_linked_tagnum(&G__sbsDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand),G__get_linked_tagnum(&G__sbsDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand),G__get_linked_tagnum(&G__sbsDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand),G__get_linked_tagnum(&G__sbsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand),G__get_linked_tagnum(&G__sbsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__sbsDictLN_THaSubDetector))) {
     THaSubDetector *G__Lderived;
     G__Lderived=(THaSubDetector*)0x1000;
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_THaSubDetector),G__get_linked_tagnum(&G__sbsDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_THaSubDetector),G__get_linked_tagnum(&G__sbsDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_THaSubDetector),G__get_linked_tagnum(&G__sbsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__sbsDictLN_THaSubDetector),G__get_linked_tagnum(&G__sbsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablesbsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__sbsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__sbsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<ModuleType>",117,G__get_linked_tagnum(&G__sbsDictLN_setlEDecodercLcLModulecLcLModuleTypecOlesslEDecodercLcLModulecLcLModuleTypegRcOallocatorlEDecodercLcLModulecLcLModuleTypegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<Decoder::Module::ModuleType>",117,G__get_linked_tagnum(&G__sbsDictLN_setlEDecodercLcLModulecLcLModuleTypecOlesslEDecodercLcLModulecLcLModuleTypegRcOallocatorlEDecodercLcLModulecLcLModuleTypegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<Decoder::Module::ModuleType,less<Decoder::Module::ModuleType> >",117,G__get_linked_tagnum(&G__sbsDictLN_setlEDecodercLcLModulecLcLModuleTypecOlesslEDecodercLcLModulecLcLModuleTypegRcOallocatorlEDecodercLcLModulecLcLModuleTypegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__sbsDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__sbsDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__sbsDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__sbsDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__sbsDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__sbsDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__sbsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__sbsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__sbsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__sbsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__sbsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SBSGEMPlane*>",117,G__get_linked_tagnum(&G__sbsDictLN_vectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<mpdmap_t>",117,G__get_linked_tagnum(&G__sbsDictLN_vectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__sbsDictLN_reverse_iteratorlEvectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Decoder */
static void G__setup_memvarDecoder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__sbsDictLN_Decoder));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("MAXROC=%lldLL",(long long)Decoder::MAXROC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("MAXBANK=%lldLL",(long long)Decoder::MAXBANK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("MAXSLOT=%lldLL",(long long)Decoder::MAXSLOT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("MAXSLOT_FB=%lldLL",(long long)Decoder::MAXSLOT_FB).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("MAX_PHYS_EVTYPE=%lldLL",(long long)Decoder::MAX_PHYS_EVTYPE).data(),0,"Types up to this are physics");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("SYNC_EVTYPE=%lldLL",(long long)Decoder::SYNC_EVTYPE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PRESTART_EVTYPE=%lldLL",(long long)Decoder::PRESTART_EVTYPE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("GO_EVTYPE=%lldLL",(long long)Decoder::GO_EVTYPE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PAUSE_EVTYPE=%lldLL",(long long)Decoder::PAUSE_EVTYPE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("END_EVTYPE=%lldLL",(long long)Decoder::END_EVTYPE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("TS_PRESCALE_EVTYPE=%lldLL",(long long)Decoder::TS_PRESCALE_EVTYPE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("EPICS_EVTYPE=%lldLL",(long long)Decoder::EPICS_EVTYPE).data(),0,"default in Hall A");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("PRESCALE_EVTYPE=%lldLL",(long long)Decoder::PRESCALE_EVTYPE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("DETMAP_FILE=%lldLL",(long long)Decoder::DETMAP_FILE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("TRIGGER_FILE=%lldLL",(long long)Decoder::TRIGGER_FILE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("SCALER_EVTYPE=%lldLL",(long long)Decoder::SCALER_EVTYPE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLEModuleType),-1,-2,1,G__FastAllocString(2048).Format("kSampleADC=%lldLL",(long long)Decoder::kSampleADC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLEModuleType),-1,-2,1,G__FastAllocString(2048).Format("kPulseIntegral=%lldLL",(long long)Decoder::kPulseIntegral).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLEModuleType),-1,-2,1,G__FastAllocString(2048).Format("kPulseTime=%lldLL",(long long)Decoder::kPulseTime).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLEModuleType),-1,-2,1,G__FastAllocString(2048).Format("kPulsePeak=%lldLL",(long long)Decoder::kPulsePeak).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLEModuleType),-1,-2,1,G__FastAllocString(2048).Format("kPulsePedestal=%lldLL",(long long)Decoder::kPulsePedestal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLEModuleType),-1,-2,1,G__FastAllocString(2048).Format("kCoarseTime=%lldLL",(long long)Decoder::kCoarseTime).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLEModuleType),-1,-2,1,G__FastAllocString(2048).Format("kFineTime=%lldLL",(long long)Decoder::kFineTime).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Decoder::MPDModule */
static void G__setup_memvarDecodercLcLMPDModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLMPDModule));
   { Decoder::MPDModule *p; p=(Decoder::MPDModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fAcqMode=",0,"normal, zero suppression, histogram, synch ...");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSamplePeriod=",0,"25 ns, 75 ns ...");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumSample=",0,"number of sample / event");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumADC=",0,"number of ADC fifos (number of front end cards served by the MPD)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIdxA=",0,"ADC");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIdxS=",0,"Sample");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIdxC=",0,"Channel");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIdxMPD=",0,"MPD ID");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCountS=",0,"Sample Counter from electronics");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCountW=",0,"Word ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"fFrameHeader=",0,"Frame Header");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"fFrameTrailer=",0,"Frame Trailer");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__sbsDictLN_setlEDecodercLcLModulecLcLModuleTypecOlesslEDecodercLcLModulecLcLModuleTypegRcOallocatorlEDecodercLcLModulecLcLModuleTypegRsPgRcLcLiterator),G__defined_typename("TypeIter_t"),-2,4,"fgThisType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__sbsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SBSBigBite */
static void G__setup_memvarSBSBigBite(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite));
   { SBSBigBite *p; p=(SBSBigBite*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__sbsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SBSGEMPlane */
static void G__setup_memvarSBSGEMPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMPlane));
   { SBSGEMPlane *p; p=(SBSGEMPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgR),G__defined_typename("vector<mpdmap_t>"),-1,4,"fMPDmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__sbsDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"fChanMapData=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZeroSuppressRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fZeroSuppress=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNch=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStrip=",0,"[fNch]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fadc[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fadc0=",0,"[fNch]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fadc1=",0,"[fNch]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fadc2=",0,"[fNch]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fadc3=",0,"[fNch]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fadc4=",0,"[fNch]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fadc5=",0,"[fNch]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__sbsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SBSGEMStand */
static void G__setup_memvarSBSGEMStand(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand));
   { SBSGEMStand *p; p=(SBSGEMStand*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__sbsDictLN_vectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgR),G__defined_typename("vector<SBSGEMPlane*>"),-1,4,"fPlanes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__sbsDictLN_THaCrateMap),-1,-1,4,"fCrateMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__sbsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarsbsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDecoder(void) {
   /* Decoder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__sbsDictLN_Decoder));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDecodercLcLMPDModule(void) {
   /* Decoder::MPDModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLMPDModule));
   G__memfunc_setup("MPDModule",839,G__sbsDict_290_0_1, 105, G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLMPDModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MPDModule",839,G__sbsDict_290_0_2, 105, G__get_linked_tagnum(&G__sbsDictLN_DecodercLcLMPDModule), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - crate i - 'Int_t' 0 - slot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - adc i - 'Int_t' 0 - sample "
"i - 'Int_t' 0 - chan", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "H - 'UInt_t' 10 - p", "{ return 0; };", (void*) NULL, 1);
   G__memfunc_setup("LoadSlot",802,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"U 'Decoder::THaSlotData' - 0 - sldat H - 'UInt_t' 10 - evbuffer "
"i - 'Int_t' 0 - pos i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("as2i",367,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 8, 
"i - 'Int_t' 0 - adc i - 'Int_t' 0 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("asc2i",466,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 8, 
"i - 'Int_t' 0 - adc i - 'Int_t' 0 - sample "
"i - 'Int_t' 0 - chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__sbsDict_290_0_10, 85, G__get_linked_tagnum(&G__sbsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Decoder::MPDModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__sbsDict_290_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Decoder::MPDModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__sbsDict_290_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Decoder::MPDModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__sbsDict_290_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Decoder::MPDModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__sbsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__sbsDict_290_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__sbsDict_290_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Decoder::MPDModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__sbsDict_290_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Decoder::MPDModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__sbsDict_290_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Decoder::MPDModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__sbsDict_290_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Decoder::MPDModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MPDModule", 965, G__sbsDict_290_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSBSBigBite(void) {
   /* SBSBigBite */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite));
   G__memfunc_setup("SBSBigBite",894,G__sbsDict_377_0_1, 105, G__get_linked_tagnum(&G__sbsDictLN_SBSBigBite), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindVertices",1222,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TrackCalc",872,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__sbsDict_377_0_4, 85, G__get_linked_tagnum(&G__sbsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SBSBigBite::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__sbsDict_377_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SBSBigBite::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__sbsDict_377_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SBSBigBite::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__sbsDict_377_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SBSBigBite::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__sbsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__sbsDict_377_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__sbsDict_377_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SBSBigBite::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__sbsDict_377_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SBSBigBite::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__sbsDict_377_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SBSBigBite::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__sbsDict_377_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SBSBigBite::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SBSBigBite", 1020, G__sbsDict_377_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSBSGEMPlane(void) {
   /* SBSGEMPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMPlane));
   G__memfunc_setup("SBSGEMPlane",945,G__sbsDict_380_0_1, 105, G__get_linked_tagnum(&G__sbsDictLN_SBSGEMPlane), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' description "
"U 'THaDetectorBase' - 0 '0' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TDatime' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i 'THaAnalysisObject::EMode' - 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Begin",485,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'THaRunBase' - 0 '0' r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("End",279,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'THaRunBase' - 0 '0' r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__sbsDict_380_0_9, 85, G__get_linked_tagnum(&G__sbsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SBSGEMPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__sbsDict_380_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SBSGEMPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__sbsDict_380_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SBSGEMPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__sbsDict_380_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SBSGEMPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__sbsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__sbsDict_380_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__sbsDict_380_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SBSGEMPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__sbsDict_380_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SBSGEMPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__sbsDict_380_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SBSGEMPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__sbsDict_380_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SBSGEMPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SBSGEMPlane", 1071, G__sbsDict_380_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSBSGEMStand(void) {
   /* SBSGEMStand */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand));
   G__memfunc_setup("SBSGEMStand",955,G__sbsDict_382_0_1, 105, G__get_linked_tagnum(&G__sbsDictLN_SBSGEMStand), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' description "
"U 'THaApparatus' - 0 '0' app", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__sbsDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseTrack",1106,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineTrack",887,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDebug",787,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Begin",485,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'THaRunBase' - 0 '0' r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("End",279,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'THaRunBase' - 0 '0' r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__sbsDict_382_0_13, 85, G__get_linked_tagnum(&G__sbsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SBSGEMStand::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__sbsDict_382_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SBSGEMStand::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__sbsDict_382_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SBSGEMStand::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__sbsDict_382_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SBSGEMStand::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__sbsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__sbsDict_382_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__sbsDict_382_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SBSGEMStand::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__sbsDict_382_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SBSGEMStand::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__sbsDict_382_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SBSGEMStand::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__sbsDict_382_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SBSGEMStand::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SBSGEMStand", 1081, G__sbsDict_382_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncsbsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalsbsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcsbsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__sbsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_Decoder = { "Decoder" , 110 , -1 };
G__linked_taginfo G__sbsDictLN_DecodercLcLModule = { "Decoder::Module" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_DecodercLcLVmeModule = { "Decoder::VmeModule" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_DecodercLcLTHaSlotData = { "Decoder::THaSlotData" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_DecodercLcLEModuleType = { "Decoder::EModuleType" , 101 , -1 };
G__linked_taginfo G__sbsDictLN_setlEDecodercLcLModulecLcLModuleTypecOlesslEDecodercLcLModulecLcLModuleTypegRcOallocatorlEDecodercLcLModulecLcLModuleTypegRsPgR = { "set<Decoder::Module::ModuleType,less<Decoder::Module::ModuleType>,allocator<Decoder::Module::ModuleType> >" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_setlEDecodercLcLModulecLcLModuleTypecOlesslEDecodercLcLModulecLcLModuleTypegRcOallocatorlEDecodercLcLModulecLcLModuleTypegRsPgRcLcLiterator = { "set<Decoder::Module::ModuleType,less<Decoder::Module::ModuleType>,allocator<Decoder::Module::ModuleType> >::iterator" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_DecodercLcLMPDModule = { "Decoder::MPDModule" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaRunBase = { "THaRunBase" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaEvData = { "THaEvData" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaAnalysisObject = { "THaAnalysisObject" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaAnalysisObjectcLcLEStatus = { "THaAnalysisObject::EStatus" , 101 , -1 };
G__linked_taginfo G__sbsDictLN_THaAnalysisObjectcLcLEMode = { "THaAnalysisObject::EMode" , 101 , -1 };
G__linked_taginfo G__sbsDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaDetector = { "THaDetector" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaApparatus = { "THaApparatus" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaVertexModule = { "THaVertexModule" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaSpectrometer = { "THaSpectrometer" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaTrackingModule = { "THaTrackingModule" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__sbsDictLN_THaDetectorBase = { "THaDetectorBase" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaSpectrometerDetector = { "THaSpectrometerDetector" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_SBSBigBite = { "SBSBigBite" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaTrackingDetector = { "THaTrackingDetector" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_SBSGEMPlane = { "SBSGEMPlane" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaCrateMap = { "THaCrateMap" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_SBSGEMStand = { "SBSGEMStand" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_vectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgR = { "vector<SBSGEMPlane*,allocator<SBSGEMPlane*> >" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_reverse_iteratorlEvectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<SBSGEMPlane*,allocator<SBSGEMPlane*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_THaSubDetector = { "THaSubDetector" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_vectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgR = { "vector<mpdmap_t,allocator<mpdmap_t> >" , 99 , -1 };
G__linked_taginfo G__sbsDictLN_reverse_iteratorlEvectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<mpdmap_t,allocator<mpdmap_t> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablesbsDict() {
  G__sbsDictLN_TClass.tagnum = -1 ;
  G__sbsDictLN_TBuffer.tagnum = -1 ;
  G__sbsDictLN_TMemberInspector.tagnum = -1 ;
  G__sbsDictLN_TObject.tagnum = -1 ;
  G__sbsDictLN_TNamed.tagnum = -1 ;
  G__sbsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__sbsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__sbsDictLN_TClonesArray.tagnum = -1 ;
  G__sbsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__sbsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__sbsDictLN_Decoder.tagnum = -1 ;
  G__sbsDictLN_DecodercLcLModule.tagnum = -1 ;
  G__sbsDictLN_DecodercLcLVmeModule.tagnum = -1 ;
  G__sbsDictLN_DecodercLcLTHaSlotData.tagnum = -1 ;
  G__sbsDictLN_DecodercLcLEModuleType.tagnum = -1 ;
  G__sbsDictLN_setlEDecodercLcLModulecLcLModuleTypecOlesslEDecodercLcLModulecLcLModuleTypegRcOallocatorlEDecodercLcLModulecLcLModuleTypegRsPgR.tagnum = -1 ;
  G__sbsDictLN_setlEDecodercLcLModulecLcLModuleTypecOlesslEDecodercLcLModulecLcLModuleTypegRcOallocatorlEDecodercLcLModulecLcLModuleTypegRsPgRcLcLiterator.tagnum = -1 ;
  G__sbsDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__sbsDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__sbsDictLN_DecodercLcLMPDModule.tagnum = -1 ;
  G__sbsDictLN_THaRunBase.tagnum = -1 ;
  G__sbsDictLN_TDatime.tagnum = -1 ;
  G__sbsDictLN_THaEvData.tagnum = -1 ;
  G__sbsDictLN_THaAnalysisObject.tagnum = -1 ;
  G__sbsDictLN_THaAnalysisObjectcLcLEStatus.tagnum = -1 ;
  G__sbsDictLN_THaAnalysisObjectcLcLEMode.tagnum = -1 ;
  G__sbsDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__sbsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__sbsDictLN_THaDetector.tagnum = -1 ;
  G__sbsDictLN_THaApparatus.tagnum = -1 ;
  G__sbsDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__sbsDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__sbsDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__sbsDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__sbsDictLN_THaVertexModule.tagnum = -1 ;
  G__sbsDictLN_THaSpectrometer.tagnum = -1 ;
  G__sbsDictLN_THaTrackingModule.tagnum = -1 ;
  G__sbsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__sbsDictLN_THaDetectorBase.tagnum = -1 ;
  G__sbsDictLN_THaSpectrometerDetector.tagnum = -1 ;
  G__sbsDictLN_SBSBigBite.tagnum = -1 ;
  G__sbsDictLN_THaTrackingDetector.tagnum = -1 ;
  G__sbsDictLN_SBSGEMPlane.tagnum = -1 ;
  G__sbsDictLN_THaCrateMap.tagnum = -1 ;
  G__sbsDictLN_SBSGEMStand.tagnum = -1 ;
  G__sbsDictLN_vectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgR.tagnum = -1 ;
  G__sbsDictLN_reverse_iteratorlEvectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__sbsDictLN_THaSubDetector.tagnum = -1 ;
  G__sbsDictLN_vectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgR.tagnum = -1 ;
  G__sbsDictLN_reverse_iteratorlEvectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablesbsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__sbsDictLN_Decoder),0,-1,0,(char*)NULL,G__setup_memvarDecoder,G__setup_memfuncDecoder);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_DecodercLcLModule);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_DecodercLcLVmeModule);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_DecodercLcLTHaSlotData);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_DecodercLcLEModuleType);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_setlEDecodercLcLModulecLcLModuleTypecOlesslEDecodercLcLModulecLcLModuleTypegRcOallocatorlEDecodercLcLModulecLcLModuleTypegRsPgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_setlEDecodercLcLModulecLcLModuleTypecOlesslEDecodercLcLModulecLcLModuleTypegRcOallocatorlEDecodercLcLModulecLcLModuleTypegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__sbsDictLN_DecodercLcLMPDModule),sizeof(Decoder::MPDModule),-1,324864,"INFN MPD Module ",G__setup_memvarDecodercLcLMPDModule,G__setup_memfuncDecodercLcLMPDModule);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaRunBase);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TDatime);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaEvData);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaAnalysisObject);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaAnalysisObjectcLcLEStatus);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaAnalysisObjectcLcLEMode);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaDetector);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaApparatus);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaVertexModule);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaSpectrometer);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaTrackingModule);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaDetectorBase);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaSpectrometerDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__sbsDictLN_SBSBigBite),sizeof(SBSBigBite),-1,324608,"BigBite spectrometer",G__setup_memvarSBSBigBite,G__setup_memfuncSBSBigBite);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaTrackingDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__sbsDictLN_SBSGEMPlane),sizeof(SBSGEMPlane),-1,324608,(char*)NULL,G__setup_memvarSBSGEMPlane,G__setup_memfuncSBSGEMPlane);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaCrateMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__sbsDictLN_SBSGEMStand),sizeof(SBSGEMStand),-1,324608,(char*)NULL,G__setup_memvarSBSGEMStand,G__setup_memfuncSBSGEMStand);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_vectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_reverse_iteratorlEvectorlESBSGEMPlanemUcOallocatorlESBSGEMPlanemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_THaSubDetector);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_vectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgR);
   G__get_linked_tagnum_fwd(&G__sbsDictLN_reverse_iteratorlEvectorlEmpdmap_tcOallocatorlEmpdmap_tgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupsbsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupsbsDict()");
  G__set_cpp_environmentsbsDict();
  G__cpp_setup_tagtablesbsDict();

  G__cpp_setup_inheritancesbsDict();

  G__cpp_setup_typetablesbsDict();

  G__cpp_setup_memvarsbsDict();

  G__cpp_setup_memfuncsbsDict();
  G__cpp_setup_globalsbsDict();
  G__cpp_setup_funcsbsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncsbsDict();
  return;
}
class G__cpp_setup_initsbsDict {
  public:
    G__cpp_setup_initsbsDict() { G__add_setup_func("sbsDict",(G__incsetup)(&G__cpp_setupsbsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initsbsDict() { G__remove_setup_func("sbsDict"); }
};
G__cpp_setup_initsbsDict G__cpp_setup_initializersbsDict;

